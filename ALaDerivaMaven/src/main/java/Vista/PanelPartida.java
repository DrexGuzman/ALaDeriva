/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vista;

import Controlador.ControladorPartida;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import static java.lang.Thread.sleep;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author 50684
 */
public class PanelPartida extends javax.swing.JPanel implements Runnable{

    /**
     * Creates new form PanelPartida
     */
    private ImageIcon fondo, marcadorCarnada, marcadoPez;
    private ControladorPartida controladorPartida;
    private String txtCarnada, txtPescado;
    private int segundos=180, cantCarnada,cantPescado=0, pescadosNivel=3;
    private boolean tiempoAgotado=false;

    public PanelPartida(ControladorPartida controladorPartida, int nivel) {
        initComponents();
        
        this.controladorPartida = controladorPartida;
        setNivel(nivel);
        
    }
     
    @Override
    public void paint(Graphics g){
    
        txtCarnada="x "+cantCarnada;
        txtPescado=cantPescado+"/"+pescadosNivel;
        
        super.paint(g);
        fondo.paintIcon(null, g, 0, 0);
        marcadorCarnada.paintIcon(null, g, 18, 10);
        marcadoPez.paintIcon(null, g, 10, 60);
        controladorPartida.dibujar(g);
        
        g.setColor(Color.white);
        g.setFont(new Font("Arial", Font.BOLD, 50));
        
        
        g.drawString(txtCarnada, 86, 40);
        g.drawString(txtPescado, 86, 90);
        
        String tiempo = String.format("%02d:%02d", (segundos % 3600) / 60, segundos % 60);
        int x = 1400;
        int y = 50;
        
        if (segundos < 60) {
            g.setColor(Color.red);
        }
        g.drawString(tiempo, x, y);
        
    }
    
    public boolean verificarMision(){
    
        if (cantPescado==pescadosNivel){
        
            return true;
        
        }else{
        
            return false;
        
        }
    
    }
    
    public ImageIcon getFondo() {
        return fondo;
    }

    public void setFondo(ImageIcon fondo) {
        this.fondo = fondo;
    }
    
    public void setNivel(int nivel){
    
                switch (nivel) {
                    
            case 1:

                fondo = new ImageIcon("./src/main/resources/Nivel1.1.png");
                marcadoPez = new ImageIcon("./src/main/resources/iconoAtun1.1.png");
                marcadorCarnada = new ImageIcon("./src/main/resources/carnadaMarcador1.1.png");

                break;

            case 2:
                
                fondo = new ImageIcon("./src/main/resources/Nivel2.1.png");
                marcadoPez = new ImageIcon("./src/main/resources/IconoPezEspada1.1.png");
                marcadorCarnada = new ImageIcon("./src/main/resources/carnadaMarcador1.1.png");
                cantPescado=0;

                break;

            case 3:
                
                fondo = new ImageIcon("./src/main/resources/Nivel3.1.png");
                marcadoPez = new ImageIcon("./src/main/resources/iconodorado1.1.png");
                marcadorCarnada = new ImageIcon("./src/main/resources/carnadaMarcador1.1.png");
                cantPescado=0;

                break;
            default:
                throw new AssertionError();
        }
    
    }
    
    //drawString metodo para el reloj

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2150, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1111, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void run() {
        while (segundos>0) {
                try {
                    sleep(1000); // Esperamos 1 segundo
                    segundos--;// Incrementamos el contador de segundos
                    repaint(); // Volvemos a dibujar la pantalla
                } catch (InterruptedException ex) {
                    //ex.printStackTrace();
                }
            }
    }

    public void setCantCarnada(int cantCarnada) {
        this.cantCarnada=cantCarnada;
    }

    public int getCantCarnada() {
        return cantCarnada;
    }
    

    public void setCantPeces(int cantidadPeces) {
        cantPescado=cantidadPeces;
    }

    public boolean getCantPescado() {
        
        if(cantPescado==pescadosNivel){
        
            return true;
        }
        
        return false;
    }
    
    public int getSeconds() {
        return segundos;
    }

    public void setSeconds(int seconds) {
        this.segundos = seconds;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
